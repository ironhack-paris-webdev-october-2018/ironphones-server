{"version":3,"sources":["components/HomePage.js","components/NotFound.js","components/PhoneList.js","components/PhoneDetails.js","components/AddPhone.js","components/SignupPage.js","components/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","react_default","a","createElement","className","Component","NotFound","Link","to","getPhoneUrl","onePhone","concat","_id","PhoneList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","phoneArray","_this2","axios","get","withCredentials","then","response","console","log","data","setState","catch","err","alert","map","key","model","brand","price","src","image","alt","PhoneDetails","specs","params","match","process","phoneId","_this$state","createdAt","oneSpec","index","AddPhone","isSubmitSuccessful","event","_event$target","target","name","value","defineProperty","preventDefault","post","_this3","Redirect","onSubmit","handleSubmit","onChange","genericSync","type","placeholder","syncSpecs","SignupPage","fullName","email","originalPassword","userDoc","onUserChange","currentUser","LoginPage","App","syncCurrentUser","delete","_this4","NavLink","exact","onClick","logoutClick","Switch","Route","path","component","render","components_SignupPage","components_LoginPage","role","aria-label","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.277b66f7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <section className=\"HomePage\">\n        <h2>Home Page</h2>\n        <p>Welcome to Ironphones! Your favorite store for overpriced phones.</p>\n      </section>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <section className=\"NotFound\">\n        <h2>404 Not Found</h2>\n\n        <p>Sorry, the page you are looking for doesn't exist.</p>\n\n        <p>\n          Don't hang up the phone, though!\n          <Link to=\"/\">See Our Inventory</Link>\n        </p>\n      </section>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nfunction getPhoneUrl(onePhone) {\n  return `/phone-details/${onePhone._id}`;\n}\n\nclass PhoneList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // initial array is empty while we are waiting for the API results\n      phoneArray: [],\n    };\n  }\n\n  // React will call \"componentDidMount()\" automatically when PhoneList loads\n  componentDidMount() {\n    // retrieve the info from the API as soon as the component loads\n    axios.get(\n      process.env.REACT_APP_SERVER_URL + \"/api/phones\",\n      { withCredentials: true }, // FORCE axios to send cookies across domains\n    )\n      .then(response => {\n        console.log(\"Phone List\", response.data);\n        // update our state array with the data from the API\n        this.setState({ phoneArray: response.data });\n      })\n      .catch(err => {\n        console.log(\"Phone List ERROR\", err);\n        alert(\"Sorry! Something went wrong.\");\n      });\n  }\n\n  render() {\n    const { phoneArray } = this.state;\n    return (\n      <section className=\"PhoneList\">\n        <h2>Our Phones</h2>\n\n        <Link to=\"/add-phone\">Add Your Phone</Link>\n\n        <ul>\n          {phoneArray.map(onePhone => {\n            return (\n              <li key={onePhone._id}>\n                <h3>\n                  <Link to={getPhoneUrl(onePhone)}>\n                    {onePhone.model}\n                  </Link>\n                </h3>\n                <p>by {onePhone.brand}</p>\n                <p>€{onePhone.price}</p>\n                <img src={onePhone.image} alt={onePhone.model} />\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default PhoneList;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass PhoneDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // we need the initial \"specs\" array to avoid an error with \".map()\"\n      specs: [],\n    };\n  }\n\n  // React will call \"componentDidMount()\" automatically when PhoneDetails loads\n  componentDidMount() {\n    const { params } = this.props.match;\n    // retrieve the info from the API as soon as the component loads\n    axios.get(\n      process.env.REACT_APP_SERVER_URL + `/api/phones/${params.phoneId}`,\n      { withCredentials: true }, // FORCE axios to send cookies across domains\n    )\n      .then(response => {\n        console.log(\"Phone Details\", response.data);\n        // update our state object with the data from the API\n        this.setState(response.data);\n      })\n      .catch(err => {\n        console.log(\"Phone Details ERROR\", err);\n        alert(\"Sorry! Something went wrong.\");\n      });\n  }\n\n  render() {\n    const { _id, brand, model, price, image, specs, createdAt } = this.state;\n    return (\n      <section className=\"PhoneDetails\">\n        <h2>Phone Details</h2>\n\n        <h3>{model}</h3>\n        <p>by <i>{brand}</i></p>\n        <b>€{price}</b>\n\n        <img src={image} alt={model} />\n\n        <h4>Specs</h4>\n        <ul>\n          {specs.map((oneSpec, index) => {\n            return <li key={index}>{oneSpec}</li>;\n          })}\n        </ul>\n\n        <p>Product no. {_id}</p>\n        <p>Added on {createdAt}</p>\n      </section>\n    );\n  }\n}\n\nexport default PhoneDetails;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nclass AddPhone extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      model: \"\",\n      brand: \"\",\n      price: \"\",\n      image: \"\",\n      // each empty string in \"specs\" will display an <input> tag\n      specs: [ \"\", \"\", \"\", ],\n      isSubmitSuccessful: false,\n    };\n  }\n\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  syncSpecs(event, index) {\n    const { specs } = this.state;\n    // update the spec value at the given index\n    specs[index] = event.target.value;\n    // set the state with the updated specs array\n    this.setState({ specs });\n  }\n\n  handleSubmit(event) {\n    // stop the page refresh\n    event.preventDefault();\n\n    // PUT and POST requests receive a 2nd argument: the info to submit\n    // (we are submitting the state we've gathered from the form)\n    axios.post(\n      process.env.REACT_APP_SERVER_URL + \"/api/phones\",\n      this.state,\n      { withCredentials: true }, // FORCE axios to send cookies across domains\n    )\n      .then(response => {\n        console.log(\"Add Phone\", response.data);\n        this.setState({ isSubmitSuccessful: true });\n      })\n      .catch(err => {\n        console.log(\"Add Phone ERROR\", err);\n        alert(\"Sorry! Something went wrong.\");\n      });\n  }\n\n  render() {\n    if (this.state.isSubmitSuccessful) {\n      // redirect back to the phone list page if the form submission worked\n      return <Redirect to=\"/phone-list\" />;\n    }\n\n    return (\n      <section className=\"AddPhone\">\n        <h2>Add a Phone</h2>\n\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <label>\n            Model:\n            <input value={this.state.model}\n                onChange={event => this.genericSync(event)}\n                type=\"text\" name=\"model\" placeholder=\"iPhone Xs\" />\n          </label>\n\n          <label>\n            Brand:\n            <input value={this.state.brand}\n                onChange={event => this.genericSync(event)}\n                type=\"text\" name=\"brand\" placeholder=\"Apple\" />\n          </label>\n\n          <label>\n            Price:\n            <input value={this.state.price}\n                onChange={event => this.genericSync(event)}\n                type=\"number\" name=\"price\" placeholder=\"999\" />\n          </label>\n\n          <label>\n            Image URL:\n            <input value={this.state.image}\n                onChange={event => this.genericSync(event)}\n                type=\"url\" name=\"image\" placeholder=\"http://example.com\" />\n          </label>\n\n          <h3>Specs</h3>\n          <p>3 characters or more</p>\n          {this.state.specs.map((oneSpec, index) => {\n            return (\n              <input key={index} type=\"text\" value={oneSpec}\n                  onChange={event => this.syncSpecs(event, index)} />\n            );\n          })}\n\n          <button>Save This Phone</button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default AddPhone;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fullName: \"\",\n      email: \"\",\n      originalPassword: \"\",\n    };\n  }\n\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    axios.post(\n      process.env.REACT_APP_SERVER_URL + \"/api/signup\",\n      this.state,\n      { withCredentials: true }, // FORCE axios to send cookies across domains\n    )\n      .then(response => {\n        console.log(\"Signup Page\", response.data);\n        const { userDoc } = response.data;\n        // send \"userDoc\" to the App.js function that changes \"currentUser\"\n        this.props.onUserChange(userDoc);\n      })\n      .catch(err => {\n        console.log(\"Signup Page ERROR\", err);\n        alert(\"Sorry! Something went wrong.\");\n      });\n  }\n\n  render() {\n    // check currentUser (received from App.js)\n    if (this.props.currentUser) {\n      return (\n        <section className=\"SignupPage\">\n          <h2>You are signed up!</h2>\n          <p>\n            Welcome, {this.props.currentUser.fullName}!\n            Your user ID is <b>{this.props.currentUser._id}.</b>\n          </p>\n        </section>\n      );\n    }\n\n    return (\n      <section className=\"SignupPage\">\n        <h2>Sign Up</h2>\n\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <label>\n            Full Name:\n            <input value={this.state.fullName}\n                onChange={event => this.genericSync(event)}\n                type=\"text\" name=\"fullName\" placeholder=\"Rey\" />\n          </label>\n\n          <label>\n            Email:\n            <input value={this.state.email}\n                onChange={event => this.genericSync(event)}\n                type=\"email\" name=\"email\" placeholder=\"rey@jedi.com\" />\n          </label>\n\n          <label>\n            Password:\n            <input value={this.state.originalPassword}\n                onChange={event => this.genericSync(event)}\n                type=\"password\" name=\"originalPassword\" placeholder=\"****\" />\n          </label>\n\n          <button>Sign Up</button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default SignupPage;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      originalPassword: \"\",\n    };\n  }\n\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    axios.post(\n      process.env.REACT_APP_SERVER_URL + \"/api/login\",\n      this.state,\n      { withCredentials: true }, // FORCE axios to send cookies across domains\n    )\n      .then(response => {\n        console.log(\"Login Page\", response.data);\n        const { userDoc } = response.data;\n        // send \"userDoc\" to the App.js function that changes \"currentUser\"\n        this.props.onUserChange(userDoc);\n      })\n      .catch(err => {\n        console.log(\"Login Page ERROR\", err);\n        alert(\"Sorry! Something went wrong.\");\n      });\n  }\n\n  render() {\n    // check currentUser (received from App.js)\n    if (this.props.currentUser) {\n      return <Redirect to=\"/phone-list\" />\n    }\n\n    return (\n      <section className=\"LoginPage\">\n        <h2>Log In</h2>\n\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <label>\n            Email:\n            <input value={this.state.email}\n                onChange={event => this.genericSync(event)}\n                type=\"email\" name=\"email\" placeholder=\"rey@jedi.com\" />\n          </label>\n\n          <label>\n            Password:\n            <input value={this.state.originalPassword}\n                onChange={event => this.genericSync(event)}\n                type=\"password\" name=\"originalPassword\" placeholder=\"****\" />\n          </label>\n\n          <button>Log In</button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from 'react';\nimport { Switch, Route, NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport './App.css';\nimport HomePage from \"./components/HomePage.js\";\nimport NotFound from \"./components/NotFound.js\";\nimport PhoneList from \"./components/PhoneList.js\";\nimport PhoneDetails from \"./components/PhoneDetails.js\";\nimport AddPhone from \"./components/AddPhone.js\";\nimport SignupPage from './components/SignupPage.js';\nimport LoginPage from \"./components/LoginPage.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: null,\n    };\n  }\n\n  componentDidMount() {\n    // React doesn't know at the start if we are logged-in or not\n    // (but we can ask the server if we are through an API request)\n    axios.get(\n      process.env.REACT_APP_SERVER_URL + \"/api/checkuser\",\n      { withCredentials: true }, // FORCE axios to send cookies across domains\n    )\n    .then(response => {\n      console.log(\"Check User\", response.data);\n      const { userDoc } = response.data;\n      this.syncCurrentUser(userDoc);\n    })\n    .catch(err => {\n      console.log(\"Check User ERROR\", err);\n      alert(\"Sorry! Something went wrong.\");\n    });\n  }\n\n  // this is the method for updating \"currentUser\"\n  // (must be defined in App.js since it's the owner of \"currentUser\" now)\n  syncCurrentUser(userDoc) {\n    this.setState({ currentUser: userDoc });\n  }\n\n  logoutClick() {\n    axios.delete(\n      process.env.REACT_APP_SERVER_URL + \"/api/logout\",\n      { withCredentials: true }, // FORCE axios to send cookies across domains\n    )\n    .then(() => {\n      // make \"currentUser\" empty again (like it was at the start)\n      this.syncCurrentUser(null);\n    })\n    .catch(err => {\n      console.log(\"Logout ERROR\", err);\n      alert(\"Sorry! Something went wrong.\");\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>Ironphones</h1>\n\n          <nav>\n            <NavLink exact to=\"/\">Home</NavLink>\n            <NavLink to=\"/phone-list\">Our Phones</NavLink>\n            {this.state.currentUser ? (\n              <span>\n                <b>{this.state.currentUser.email}</b>\n                <button onClick={() => this.logoutClick()}>\n                  Log Out\n                </button>\n              </span>\n            ) : (\n              <span>\n                <NavLink to=\"/signup-page\">Sign Up</NavLink>\n                <NavLink to=\"/login-page\">Log In</NavLink>\n              </span>\n            )}\n          </nav>\n        </header>\n\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/phone-list\" component={PhoneList} />\n          <Route path=\"/phone-details/:phoneId\" component={PhoneDetails} />\n          <Route path=\"/add-phone\" component={AddPhone} />\n          {/* Use \"render\" instead of \"component\" to pass props */}\n          <Route path=\"/signup-page\" render={() =>\n            <SignupPage currentUser={this.state.currentUser}\n                onUserChange={userDoc => this.syncCurrentUser(userDoc)} />\n          } />\n          <Route path=\"/login-page\" render={() =>\n            <LoginPage currentUser={this.state.currentUser}\n                onUserChange={userDoc => this.syncCurrentUser(userDoc)} />\n          } />\n\n          {/* 404 route LAST */}\n          <Route component={NotFound} />\n        </Switch>\n\n        <footer>\n          <p>\n            Made with\n            <span role=\"img\" aria-label=\"phone\">📱</span>\n            at Ironhack\n          </p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}